CMAKE_MINIMUM_REQUIRED (VERSION 3.5.2)


STRING (TIMESTAMP PROJECT_BUILD_TIME "%Y-%m-%dT%H:%M:%SZ" UTC)


PROJECT (libsysinfo
    VERSION "0.1.0.0"
)


CONFIGURE_FILE (${CMAKE_SOURCE_DIR}/cmake/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)


SET (LIBSYSINFO_OUTPUT_NAME
    "sysinfo"
)


SET (LIBSYSINFO_SRCS
    libsysinfo.cpp
)


SET (LIBSYSINFO_PUBLIC_HEADERS
    libsysinfo.h
)


ADD_LIBRARY (${PROJECT_NAME} SHARED ${LIBSYSINFO_SRCS})
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME}
    PRIVATE "${PROJECT_SOURCE_DIR}"
    PRIVATE "${PROJECT_BINARY_DIR}"
    PUBLIC  "${CMAKE_SOURCE_DIR}/plugins/common"
)
SET_TARGET_PROPERTIES (${PROJECT_NAME}
    PROPERTIES
    OUTPUT_NAME   ${LIBSYSINFO_OUTPUT_NAME}
    VERSION       ${PROJECT_VERSION}
    SOVERSION     ${PROJECT_VERSION_MAJOR}
    PUBLIC_HEADER ${LIBSYSINFO_PUBLIC_HEADERS}
    COMPILE_DEFINITIONS LIBSYSINFO_EXPORTS=1
    CXX_VISIBILITY_PRESET       hidden
    VISIBILITY_INLINES_HIDDEN   1
    POSITION_INDEPENDENT_CODE   ON
)


IF ( enable_libpoco )
    TARGET_COMPILE_DEFINITIONS( ${PROJECT_NAME}
        PRIVATE "ENABLE_LIBPOCO"
    )

    TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME}
        PRIVATE "${POCO_INCLUDE_DIR}"
    )

    TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
        ${POCO_LIBS}
    )
ENDIF ()


ADD_LIBRARY (${PROJECT_NAME}-static STATIC ${LIBSYSINFO_SRCS})
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME}-static
    PRIVATE "${PROJECT_SOURCE_DIR}"
    PRIVATE "${PROJECT_BINARY_DIR}"
    PUBLIC  "${CMAKE_SOURCE_DIR}/plugins/common"
)
SET_TARGET_PROPERTIES (${PROJECT_NAME}-static
    PROPERTIES
    OUTPUT_NAME   ${LIBSYSINFO_OUTPUT_NAME}
    PREFIX        "lib"
    VERSION       ${PROJECT_VERSION}
    SOVERSION     ${PROJECT_VERSION_MAJOR}
    PUBLIC_HEADER ${LIBSYSINFO_PUBLIC_HEADERS}
    COMPILE_DEFINITIONS LIBSYSINFO_STATIC=1
    POSITION_INDEPENDENT_CODE   ON
)


IF ( enable_libpoco )
    TARGET_COMPILE_DEFINITIONS( ${PROJECT_NAME}-static
        PRIVATE "ENABLE_LIBPOCO"
    )

    TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME}-static
        PRIVATE "${POCO_INCLUDE_DIR}"
    )

    TARGET_LINK_LIBRARIES( ${PROJECT_NAME}-static
        ${POCO_LIBS}
    )
ENDIF ()


INSTALL (TARGETS ${PROJECT_NAME} ${PROJECT_NAME}-static
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        PUBLIC_HEADER DESTINATION include
)

